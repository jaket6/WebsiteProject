<!DOCTYPE html>
<!-- saved from url=(0050)file:///C:/Users/Jake/Website/LearningHowToGit.htm -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>LearningHowToGit</title>
<link rel="shortcut icon" href="file:///C:/Users/Jake/Website//Blog_files/blogicon.ico">

    <!-- Bootstrap core CSS -->
    <link href="file:///C:/Users/Jake/Website/css/bootstrap.css" rel="stylesheet">

    <!-- Add custom CSS here -->
    <link href="file:///C:/Users/Jake/Website/css/business-casual.css" rel="stylesheet">
</head>

<body>

    <div class="brand">The Blog</div>
    <div class="address-bar">Sports-Talk | Tutorials | Current Events | Lifestyle</div>

    <nav class="navbar navbar-default" role="navigation">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-ex1-collapse">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="file:///E:/Bootstrap/business-casual/index.html">Business Casual</a>
            </div>

            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse navbar-ex1-collapse">
                <ul class="nav navbar-nav">
                    <li><a href="file:///C:/Users/Jake/Website/index.html">Home</a>
                    </li>
                    <li><a href="file:///C:/Users/Jake/Website/About.htm">About</a>
                    </li>
                    <li><a href="file:///C:/Users/Jake/Website/Projects.htm">Projects</a>
                    </li>
                    

<li><a href="file:///C:/Users/Jake/Website/Experience.htm">Experience</a>
                    </li>
                </ul>
            </div>
            <!-- /.navbar-collapse -->
        </div>
        <!-- /.container -->
    </nav>

    <div class="container">

        <div class="row">
            <div class="box">
                
                <div class="col-lg-12 text-center">
                    <img class="img-responsive img-border img-full" src="./LearningHowToGit_files/github.jpg" alt="">
                    <h2>Learning How to Git<br>
                        <small>May 21, 2014</small>
                    </h2>
                    <br><br><p align="justify">Finally, after a semester of procrastination, its time to install GitHub. 
  In an attempt to better my documentation and programming habits, I had no 
  choice but to join the Git-club. Hopefully, installing and learning this 
  software will allow me to organize years worth of accumulated project code. 
  Currently, all of my projects are stored on my five year old HP Pavilion 
  Laptop who comes closer to computer Jesus every time I shut her down. 
  Mind you, none of these projects have been backed up and only the final
  versions have survived the Recycle Bin's bottomless basket.
<br><br></p>

<p align="justify">So how do I even get started? Well, like most problems in life, 
  the simple answer it to <i>Google</i> it. Using a variety of online tutorials
  we will see how far we can Git (pun alert).<br><br></p>

<p align="justify">After attempting to create a new account, GitHub informed me that my email 
  was already linked to an existing login. Flashbacks to the middle of the 
  semester reminded me how I first came to hear about this service. The great
  Kenny Luong simply quipped “It's all on Git” after I requested to see some
  of his project's Arduino code. Now its time to put this account to good use
  and, like most engineer endeavors, it begins by watching a listless progress
  bar.<br><br></p>



                    
                    <img class="img-responsive img-border img-full" src="./LearningHowToGit_files/DownloadScreen1.jpg" alt="">
<br>

<img class="img-responsive img-border img-full" src="./LearningHowToGit_files/ProgessBar2.jpg" alt=""><p align="justify"><br>Well that was easy enough. After the installation finished, 
  I was greeted with the sleek and shiny GitHub user-interface for windows.
  Guess I should try loging in?
  <br><br></p><img class="img-responsive img-border img-full" src="./LearningHowToGit_files/LoginUserInterface3.jpg" alt=""><p align="justify"><br>Well, everything is empty (no surprise). Looks like I have 
  to create a new repository where I can store my first project. Clicking around
  brought me to this screen where I entered some basic information.
  <br><br></p>
<img class="img-responsive img-border img-full" src="./LearningHowToGit_files/Createnewrepository4.jpg" alt="">
<p align="justify"><br>Okay, now things get a little harder. After opening the repository 
  I had just created, I was prompted with another screen with multiple options. From 
  my understanding, the GUI controls the online repositories stored on the GitHub servers 
  located in San Francisco. However, to <i>edit, push</i>, and <i>pull</i> code from my local computer,
  I had to make use of the command line via the Git PowerShell application (which was also downloaded).<br><br></p>

<img class="img-responsive img-border img-full" src="./LearningHowToGit_files/FreshRepository5.jpg" alt="">
<p align="justify"><br>I have had limited experience with command lines in school though I 
  am aware of some basics such as the <i>cd, ls</i>, and <i>mkdir</i> commands. Most of this process was 
  learned through trial and error along with various online guides (linked below).  According 
  to these resources, I had to configure a few settings within the PowerShell. Configuring 
  information such as my user name and email address were necessary before getting started.<br><br></p>
<img class="img-responsive img-border img-full" src="./LearningHowToGit_files/PowerShellconfig 6.jpg" alt="">
<p align="justify"><br>Now we are ready to create a local repository which we can later push to 
  the GitHub servers for storage and version control. Typical commands such as <i>mkdir ~/Website</i> 
  and <i>cd  ~/Website</i> will create a new directory for storage and move the PowerShell into that 
  directory. Finally, the command <i>git init</i> will turn this ordinary directory into a local Git
  repository.
  <br><br></p>
<img class="img-responsive img-border img-full" src="./LearningHowToGit_files/Gitinit7.jpg" alt="">

<p align="justify"><br>Now the <i>Website</i> folder in my User file is Git ready. The next 
  appropriate step would be a test of the the Git directory and attempt to push from
  this local repository the GitHub servers. First, I need to create a test file which 
  can be uploaded. The simplest option is a <i>Readme.txt</i> file. Inputting the command touch 
  <i>Readme.txt</i> creates a file with that respective name.  <br><br></p><img class="img-responsive img-border img-full" src="./LearningHowToGit_files/CreatingReadmetxt8.jpg" alt="">
<p align="justify"><br>The file now exists within the <i>Website</i> directory though it is listed under
  <i>Untracked files:</i>. This means the repository is ignoring the files existence until we manually 
  add it with the <i>git add Readme.txt</i> command. After the <i>Readme.txt</i> file is added, its time to take
  a snapshot or <i>commit</i> of the current repository. The command <i>git commit -m "Add Readme.txt”</i> will
  accomplish this. The statement located inside of the quotation marks serves as a name for that 
  particular <i>commit</i>.<br><br></p><img class="img-responsive img-border img-full" src="./LearningHowToGit_files/GitAddCommit9.jpg" alt=""><p align="justify"><br>Now its time to connect the online and local repositories before we can 
  perform our first <i>push</i>. The command <i>git remote set-url origin https://github.com/jaket6/WebsiteProject.git</i> 
  will perform the connection. The web address must match the online repository you wish to link 
  EXACTLY. The easiest way to double check the url would be to visit your GitHib profile and 
  type the exact repository address. The command <i>git remote -v</i> will verify the connection has
  been made.<br><br></p>
<img class="img-responsive img-border img-full" src="./LearningHowToGit_files/Gitoriginlink10.jpg" alt="">

<p align="justify"><br>Now we can finally <i>push</i>! The command <i>git push origin master</i> will 
  effectively sync the commits from your local repository to the online servers. At the 
  moment, I am the only person working on this repository so directly updating the master 
  branch is acceptable. In group projects, I would likely <i>push</i> to my branch instead.
  <br><br></p><img class="img-responsive img-border img-full" src="./LearningHowToGit_files/Gitpush11.jpg" alt=""><p align="justify"><br>Now if everything was successful, I should be able to check github.com 
  through any ordinary internet browser and find my initial <i>“Add Readme.txt”</i> commit.
  <br><br></p>
<img class="img-responsive img-border img-full" src="./LearningHowToGit_files/Gitcheckpush12.jpg" alt="">

<p align="justify"> <br>Looks like it worked! Remember that the original <i>Readme.txt</i> was empty. 
  This process was a setup and test of Git's <i>push</i> and <i>commit</i> capabilities.<br><br></p><p align="justify">Things to remember:<br>
 <i>git init</i>: will make any folder Git ready <br>
 <i>git add Filename.txt</i>: will allow the Git repository to recognize the files <br>
 <i>git commit -m “Name of Commit”</i>: takes a snapshot of the updated project <br>
 <i>git push origin master</i>: will sync online and local repositories with master branch<br><br>
</p><p align="justify">This online resource helped me a lot in the setup and testing of GitHub.
  It contains a more detailed look into the commands used in Windows PowerShell along with 
  providing a theoretical understanding of what Git is doing.<br><br></p>
<p>
<a href="http://readwrite.com/2013/09/30/understanding-github-a-journey-for-beginners-part-1#awesm=~oELPdcgAz3KLT6">GitHub for Beginners Part One</a>
</p>


<p>
<a href="http://readwrite.com/2013/10/02/github-for-beginners-part-2#awesm=~oELLGfPDs0azHm">GitHub for Beginners Part Two</a>
</p><br><br><a href="file:///C:/Users/Jake/Website/LearningHowToGit_files/LearningHowToGit.htm" class="btn btn-default btn-lg">Back to Blogs</a>

<hr>
                </div>
                
                
                
            </div>
        </div>

    </div>
    <!-- /.container -->

    <footer>
        <div class="row">
                <div class="col-md-6 col-md-offset-3 text-center">
  <p></p>
<ul class="list-inline intro-social-buttons">
                            <li><a href="https://twitter.com/JakeTsuyemura" class="btn btn-default btn-lg"><i class="fa fa-twitter fa-fw"></i> <span class="network-name">Twitter</span></a>
                            </li>
                            <li><a href="https://github.com/jaket6" class="btn btn-default btn-lg"><i class="fa fa-github fa-fw"></i> <span class="network-name">Github</span></a>
                            </li>
                            <li><a href="https://www.linkedin.com/profile/view?id=338026846" class="btn btn-default btn-lg"><i class="fa fa-linkedin fa-fw"></i> <span class="network-name">Linkedin</span></a>
                            </li>
                        </ul><ul class="list-inline intro-social-buttons">
                            <li><a href="https://www.facebook.com/jake.tsuyemura" class="btn btn-default btn-lg"><i class="fa fa-facebook fa-fw"></i> <span class="network-name">Facebook</span></a>
                            </li>
                            <li><a href="https://plus.google.com/105891219501094509624/posts" class="btn btn-default btn-lg"><i class="fa fa-google-plus fa-fw"></i> <span class="network-name">Google+</span></a>
                            </li>
                            
                        </ul>
                    <div class="top-scroll">
                        <a href="file:///E:/Bootstrap/stylish-portfolio/index.html#top"><i class="fa fa-circle-arrow-up scroll fa-4x"></i></a>
                    </div>
                    <hr>
                    <p>Copyright © Jake Tsuyemura 2014</p>
                </div>
            </div>

    </footer>

    <!-- JavaScript -->
    <script src="./LearningHowToGit_files/jquery-1.10.2.js"></script>
    <script src="./LearningHowToGit_files/bootstrap.js"></script>




</body></html>